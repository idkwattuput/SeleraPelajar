version: "3.9"
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      PORT: 8000
      ACCESS_TOKEN_SECRET: b9d137f95699f6dabf6ac0ee5236114b55718440c359a71fe1451dd30600f3cedd69fe127567ebfaeb8398650b64dac519179507a485ac39fda68728ef0f01f4
      ACCESS_TOKEN_EXPIRES: 20s
      REFRESH_TOKEN_SECRET: e5fee23b7cbbc0eac33da5e2bd0dbf69bed602dd7a8afe261024e6df1c10b3aabd0409d5165519d33d67af763a12c03daf28fe0ed3ca1a5062ecb10bcc363b04
      REFRESH_TOKEN_EXPIRES: 30d
      DATABASE_URL: postgres://postgres:123postgres@192.168.1.10:5432/selerapelajar
      NODE_ENV: development
    # depends_on:
    #   - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      BACKEND_URL: "http://localhost:8000"
      NODE_ENV: development

  seller:
    build:
      context: ./frontend-seller
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./frontend-seller:/app
    environment:
      BACKEND_URL: "http://localhost:8000"
      NODE_ENV: development

#   postgres:
#     image: postgres:15
#     container_name: postgres_container
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: 123postgres
#       POSTGRES_DB: selera_pelajar
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#
# volumes:
#   postgres_data:
